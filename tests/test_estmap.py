
import pytest
import uonidtoolbox as unit
import numpy as np


@pytest.mark.matlab
def test_matlabResult_Mtype_AR():
    Z = {}
    Z['y'] = np.array([0.3689, 1.7332, 4.4612, 8.6571, 14.1025, 19.9205, 25.1013, 28.6412, 29.6255, 27.9823, 24.3297, 19.6076, 14.9241, 11.4991, 10.1617, 11.0637, 13.7449, 17.2860, 20.3594, 22.1273, 22.6871, 22.2647, 21.7503, 21.7766, 22.4222, 23.0887, 22.8530, 20.8312, 16.9178, 12.2047, 8.1746, 6.1802, 7.1880, 10.3238, 13.9558, 16.6593, 17.7819, 16.8473, 13.6191, 8.7625, 3.3752, -1.2232, -4.3543, -6.3534, -7.5214, -7.7184, -6.3560, -3.7456, -1.0647, 0.1189, -1.0943, -4.8182, -9.8748, -15.1380, -20.1121, -24.3101, -26.8854, -27.5187, -26.7431, -25.3383, -24.4567, -24.7742, -26.0167, -27.3826, -28.6450, -29.8255, -30.9399, -31.2633, -29.8637, -26.3731, -20.7224, -13.8470, -7.1985, -1.6368, 2.8426, 6.6485, 10.1993, 13.4056, 16.1677, 18.0377, 18.8201, 18.6230, 18.0602, 17.5344, 17.3998, 17.9912, 19.0084, 19.9550, 20.8642, 21.8105, 22.6187, 23.1577, 23.2020, 22.7213, 21.7322, 20.3055, 18.7144, 17.6494, 17.6896, 19.4331]).reshape(1,100)

    M = {}
    M['nA']     = 5
    M['T']      = 1
    M['type']   = 'ar'

    OPT = {}
    OPT['dsp'] = 0

    Z   = unit.startZ(Z)
    M   = unit.startM(Z,M)
    OPT = unit.startOPT(OPT,M)

    ep_py = unit.estmap(Z,M,OPT)
    ep_ml = unit._utils.helper_callMatlab_estmap(Z,M,OPT)

    np.testing.assert_equal(ep_py.keys(), ep_ml.keys())
    for k in ep_py.keys():
        if isinstance(ep_py[k], np.ndarray):
            np.testing.assert_allclose(ep_py[k], ep_ml[k])
        else:
            np.testing.assert_equal(ep_py[k], ep_ml[k])
        #endif
    #endfor
#endfunction

