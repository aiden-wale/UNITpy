
import pytest
import uonidtoolbox as unit
import numpy as np


@pytest.mark.matlab
def test_matlabResult():
    Z = {}
    Z['u'] = np.array([0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1]).reshape([1, 50])
    Z['y'] = np.array([0.1505,  0.4466,  0.0082, -0.0021,  0.5915, -0.0233,  0.2751,  0.7622,  0.7694,  1.4671,  1.6932,  1.8357,  1.8977,  2.7174,  2.4473,  3.2220,  3.5492,  3.3869,  3.5003,  3.6540,  2.9860,  2.3764,  2.0255,  1.4569,  0.4260,  0.2941,  0.4930, -0.1151, -0.0061, -0.4835, -0.0158,  0.3729,  0.0449,  0.9156,  1.0666,  1.0895,  1.5500,  1.0335,  0.9223,  1.0800,  0.9004,  0.5220, -0.0388,  0.1815, -0.8116, -0.6079, -0.6360, -1.0180, -1.0058, -1.0628]).reshape([1, 50])

    M = {}
    M['nx']     = 4
    M['T']      = 1
    M['type']   = 'ss'

    Z = unit.startZ(Z)
    M = unit.startM(Z,M)

    M_py = unit.startNL(Z,M)
    M_ml = unit._utils.helper_callMatlab_startM(Z,M)

    print(M_ml)

    np.testing.assert_equal(M_py, M_ml)
